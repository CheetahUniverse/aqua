service SomeService(""):
  getStr(s: string) -> string

scope SomeScope:
  someArrow(s: string) -> string

func funcStr(s: string) -> string:
  strInFunc <- SomeService.getStr(s)
  <- strInFunc

--
-- func diffFunc(s: string) -> string:
--   differentStr <- SomeService.different(s)
--   <- differentStr
--
-- func unit():
--   funcStr("")

-- func bbbbbbb()
--
-- func aaaaaa():
--   closure = (a: string) -> string:
--     <- SomeService.str()

-- func handleSecScope(sc: SomeScope) -> string:
--   b = sc.someArrow("SECOND HANDLE")
--   <- b
--
-- func handleScope() -> string:
--   newScope = SomeScope(someArrow = funcStr)
--   d <- handleSecScope(newScope)
--   <- d

func handleSecScope(sc: string -> string) -> string:
  b = sc("SECOND HANDLE")
  <- b

func handleScope() -> string:
  newScope = (s: string) -> string:
    <- "123"
  d <- handleSecScope(newScope)
  <- d
