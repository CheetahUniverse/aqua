aqua Main

export handleScope

service SomeService(""):
  getStr(s: string) -> string

scope SomeScope:
  someArrow(s: string) -> string
  str: string

func funcStr(s: string) -> string:
  strInFunc <- SomeService.getStr(s)
  <- strInFunc

--
-- func diffFunc(s: string) -> string:
--   differentStr <- SomeService.different(s)
--   <- differentStr
--
-- func unit():
--   funcStr("")

-- func bbbbbbb()
--
-- func aaaaaa():
--   closure = (a: string) -> string:
--     <- SomeService.str()

func handleSecScope{SomeScope}(sc: SomeScope) -> string:
  b = sc.someArrow(sc.str)
  <- b

func returnScope(s: string) -> SomeScope:
  sc = SomeScope(someArrow = funcStr, str = s)
  <- sc

func handleScope(fff: string) -> string:
  sc = returnScope(fff)
  d <- handleSecScope(sc)
  <- d
